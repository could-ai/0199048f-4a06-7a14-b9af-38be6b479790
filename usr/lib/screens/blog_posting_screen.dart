import 'package:flutter/material.dart';

class BlogPostingScreen extends StatefulWidget {
  const BlogPostingScreen({super.key});

  @override
  State<BlogPostingScreen> createState() => _BlogPostingScreenState();
}

class _BlogPostingScreenState extends State<BlogPostingScreen> {
  final TextEditingController urlController = TextEditingController();
  String generatedContent = '';
  bool isGenerating = false;
  bool isPosting = false;

  Future<void> generatePost() async {
    setState(() {
      isGenerating = true;
    });
    // Placeholder for AI generation logic
    await Future.delayed(const Duration(seconds: 2));
    setState(() {
      generatedContent = '## AI Generated Post for ' + urlController.text + '\n\n' +
          'This is a placeholder blog post generated by AI. Replace with real AI API integration.';
      isGenerating = false;
    });
  }

  Future<void> postToBlog() async {
    setState(() {
      isPosting = true;
    });
    // Placeholder for posting logic to external blog platforms
    await Future.delayed(const Duration(seconds: 1));
    setState(() {
      isPosting = false;
    });
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('Posted to blog (simulation).')),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('AI Blog Posting'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text('Website URL:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            TextField(
              controller: urlController,
              decoration: const InputDecoration(
                hintText: 'Enter the website URL',
              ),
            ),
            const SizedBox(height: 12),
            ElevatedButton(
              onPressed: isGenerating ? null : generatePost,
              child: isGenerating ? const CircularProgressIndicator() : const Text('Generate Post'),
            ),
            const SizedBox(height: 16),
            const Text('Generated Content:', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            const SizedBox(height: 8),
            Expanded(
              child: SingleChildScrollView(
                child: Text(
                  generatedContent.isEmpty ? 'No content generated yet.' : generatedContent,
                  style: const TextStyle(fontSize: 14),
                ),
              ),
            ),
            const SizedBox(height: 12),
            ElevatedButton(
              onPressed: (generatedContent.isEmpty || isPosting) ? null : postToBlog,
              child: isPosting ? const CircularProgressIndicator() : const Text('Post to Blog'),
            ),
          ],
        ),
      ),
    );
  }
}
